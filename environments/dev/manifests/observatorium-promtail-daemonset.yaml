apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: promtail
    app.kubernetes.io/instance: observatorium
    app.kubernetes.io/name: observatorium-promtail
    app.kubernetes.io/part-of: observatorium
    app.kubernetes.io/version: 1.6.1
  name: observatorium-promtail
  namespace: observatorium
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: promtail
      app.kubernetes.io/instance: observatorium
      app.kubernetes.io/name: observatorium-promtail
      app.kubernetes.io/part-of: observatorium
      app.kubernetes.io/version: 1.6.1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: promtail
        app.kubernetes.io/instance: observatorium
        app.kubernetes.io/name: observatorium-promtail
        app.kubernetes.io/part-of: observatorium
        app.kubernetes.io/version: 1.6.1
    spec:
      containers:
      - args:
        - -config.file=/etc/promtail/promtail.yml
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: grafana/promtail:1.6.1
        imagePullPolicy: IfNotPresent
        name: promtail
        ports:
        - containerPort: 80
          name: http-metrics
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 10
          timeoutSeconds: 1
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/shared
          name: shared
          readOnly: false
        - mountPath: /etc/promtail
          name: observatorium-promtail
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      initContainers:
      - command:
        - /bin/sh
        - -c
        - |
          curl --request POST \
              --silent \
              --url http://dex.dex.svc.cluster.local:5556/dex/token \
              --header 'content-type: application/x-www-form-urlencoded' \
              --data grant_type=password \
              --data username=admin@example.com \
              --data password=password \
              --data client_id=test \
              --data client_secret=ZXhhbXBsZS1hcHAtc2VjcmV0 \
              --data scope="openid email" | sed 's/^{.*"id_token":[^"]*"\([^"]*\)".*}/\1/' > /var/shared/token
        image: docker.io/curlimages/curl:7.72.0
        imagePullPolicy: IfNotPresent
        name: promtail-init
        volumeMounts:
        - mountPath: /var/shared
          name: shared
          readOnly: false
      serviceAccount: observatorium-promtail
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - emptyDir: {}
        name: shared
      - configMap:
          name: observatorium-promtail
        name: observatorium-promtail
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
  updateStrategy:
    type: RollingUpdate
